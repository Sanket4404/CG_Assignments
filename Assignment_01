#include<stdio.h>
#include<conio.h>
#include<graphics.h>
#include<math.h>
#include<iostream.h>
classDDA
{
public:
voiddrawline(intx1,inty1,intx2,inty2);
};
voidDDA::drawline(intx1,inty1,intx2,inty2)
{
intdx,dy,l;
inti=0;
floatxi,yi,x,y;
//line(x1,y1,x2,y2);
dx=x2-x1;
dy=y2-y1;
if(abs(dx)>abs(dy))
{
l=abs(dx);
}
else
{
l=abs(dy);
}
xi=(float)dx/l;
yi=(float)dy/l;
x=x1+0.5;
y=y1+0.5;
while(i<=l)
{
x=x+xi;

y=y+yi;
putpixel((int)x,(int)y,RED);
i++;
}
}
classbre
{
public:
voidcir(intxc,intyc,intr1)
{
intr=r1;
intx=0;
inty=r;
ints;
s=3-2*r;
while(x<=y)
{
if(s<=0)
{
s=s+4*x+6;
x++;
}
else
{
s=s+4*(x-y)+10;
x++;
y--;
}
putpixel(xc-x,yc+y,RED);
putpixel(xc+x,yc+y,RED);
putpixel(xc-y,yc+x,RED);
putpixel(xc-x,yc+y,RED);
putpixel(xc+x,yc-y,RED);
putpixel(xc-x,yc-y,RED);
putpixel(xc-y,yc-x,RED);
putpixel(xc+y,yc-x,RED);
putpixel(xc+y,yc+x,RED);
}
}
};
intmain()
{
intgd=DETECT,gm;
initgraph(&gd,&gm,"c:\\TURBOC3\\BGI");
breobj;
obj.cir(200,230,68);
obj.cir(200,238,138);
DDAline1;
line1.drawline(77,300,323,300);
line1.drawline(77,300,200,100);
line1.drawline(200,100,323,300);

getch();
getch();
closegraph();
return0;
}




